{"title":"Data Programming","markdown":{"yaml":{"title":"Data Programming","subtitle":"Project - Netflix Dataset","author":"Mirko Dugajlic","date":"`r format(Sys.time(), '%e %B %Y')`","format":{"html":{"toc":true,"toc_float":"yes","embed-resources":true}},"execute":{"warning":false,"messages":false,"echo":true,"error":true},"bibliography":"bibliography.bib"},"headingText":"Introduction","headingAttr":{"id":"sec-intro","classes":[],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n\n### About\n\nNetflix stands as a leading force in the realm of media and video streaming. With a staggering array of over 8,000 movies and TV shows accessible on their platform, as of mid-2021, their global subscriber count exceeds 200 million. This tabulated dataset comprehensively catalogues all offerings on Netflix, including vital details such as cast, directors, ratings, release year, duration, and more.\n\n### Why this topic?\n\n-   Firstly, it provides a rich source of information about user preferences and viewing habits, which are essential for building accurate recommendation models.\n\n-   Secondly, the Netflix movies dataset enables the development and evaluation of advanced *recommendation algorithms* and *machine learning models*. With access to detailed information about movie genres, ratings, release years, crew and cast, and user interactions, etc. scientists can experiment with various algorithms such as [collaborative filtering]{.underline}, [content-based filtering]{.underline}, and [hybrid methods]{.underline} to improve the [accuracy]{style=\"color: red;\"} and [relevance]{style=\"color: red;\"} of recommendations.\n\nMoreover, by continually updating and expanding the dataset, we contribute to the ongoing research and development efforts in the field of recommendation systems. As streaming platforms like Netflix evolve and introduce new content, it becomes imperative to adapt recommendation algorithms to accommodate these changes and ensure that users receive personalized and engaging recommendations.\n\n## Dataset Overview\n\n### About\n\nThe Netflix Titles dataset is a comprehensive compilation of movies and TV shows available on Netflix, covering various aspects such as the title type, director, cast, country of production, release year, rating, duration, genres (listed in), and a brief description. This dataset is instrumental for analyzing trends in Netflix content, understanding genre popularity, and examining the distribution of content across different regions and time periods.\n\n### Key Details\n\n**Dataset**: [Netflix Dataset](https://www.kaggle.com/datasets/rahulvyasm/netflix-movies-and-tv-shows)\n\n**Total Entries**: The dataset contains 8,809 entries, each representing a unique movie or TV show.\n\n**Columns**: There are 12 columns in the dataset:\n\n1)  **show_id**: A unique identifier for each title.\n\n2)  **type**: The category of the title, which is either 'Movie' or 'TV Show'.\n\n3)  **title**: The name of the movie or TV show.\n\n4)  **director**: The director(s) of the movie or TV show. (Contains null values for some entries, especially TV shows where this information might not be applicable.)\n\n5)  **cast**: The list of main actors/actresses in the title. (Some entries might not have this information.)\n\n6)  **country**: The country or countries where the movie or TV show was produced.\n\n7)  **date_added**: The date the title was added to Netflix.\n\n8)  **release_year**: The year the movie or TV show was originally released.\n\n9)  **rating**: The age rating of the title.\n\n10) **duration**: The duration of the title, in minutes for movies and seasons for TV shows.\n\n11) **listed_in**: The genres the title falls under.\n\n12) **description**: A brief summary of the title.\n\n## Analysis\n\n### Frequently used functions and libraries\n\n```{r}\nlibrary(readxl)\nlibrary(tibble)\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(ggplot2)\n\n# get counts for any passed column\n\nget.count <- function(data, column) {\n  column <- enquo(column)  # Capture the column name\n  cnt <- data %>%\n    count(!!column)  # Unquote the column name\n  return(cnt)\n}\n\ncustom_colors <- c(\"Movie\" = \"#db0000\", \"TV Show\" = \"#564d4d\")\n\n```\n\n### Visual representation of dataset\n\n```{r}\n\n\ndf <- read.csv(\"./files/netflix_titles.csv\")\ncolumns_to_delete <- grep(\"^X\", names(df))\n# Reason for deleting columns is that it makes additional columns after reading files. \n# Columns are called X, X.1, X.2 and so on.\ndf <- df[, -columns_to_delete]\nas_tibble(df)\n\n```\n\n### Error checking\n\n$$\n\\begin{equation}\n RMSE = \\sqrt{\\sum_{i=1}^{n} \\frac{(\\hat y_i - y_i)^2} {n}}\n\\end{equation}\n$$ Here we can see how to calculate RMSE (Root Mean Square) which is either one of two closely related and frequently used measures of the differences between true or predicted values on the one hand and observed values or an estimator on the other. Variables used in the formula are:\n\n-   $\\hat{y}$ - predicted values\n\n-   $y$ - observed values\n\n-   $n$ - number of observations\n\n### Movie & TV Show distribution\n\n```{r}\n#| label: fig-movies-and-tvshows-count\n#| fig-cap: \"Movie & TV Shows total count\"\n\nggplot(df, aes(x = type, fill = type)) +\n  geom_bar() +\n  geom_text(stat='count', aes(label=..count..), position=position_stack(vjust=0.5), color=\"white\") +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values = custom_colors)\n\n```\n\nOn this graph we can see that the movies are leading and that is somehow logical because they are easier to make.\n\nThe data from @fig-movies-and-tvshows-count could be also presented as percentages from the whole dataset.\n\n```{r}\n#| label: fig-movies-and-tvshows-percentages\n#| fig-cap: \"Movie & TV Shows distribution of total per country in %\"\n\ndf_summary <- df %>%\n  count(type) %>%\n  mutate(percentage = round(n / sum(n) * 100, 1))\n\nggplot(df_summary, aes(x = \"\", y = n, fill = type)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(theta = \"y\") +\n  geom_text(aes(label = paste0(percentage, \"%\")), \n            position = position_stack(vjust = 0.5), color = \"white\") +\n  theme_void()+\n  scale_fill_manual(values = custom_colors)\n```\n\n### Distribution over countries\n\nAfter these two (@fig-movies-and-tvshows-count and @fig-movies-and-tvshows-percentages) basic overviews lets dive into the distribution of movies and TV shows over countries.\n\nIn the next figures @tbl-top_n_countries and @fig-distribution-over-countries-percentage we will show the percentage and the total number of the movies and tv shows made per country.\n\n```{r}\n#| label: tbl-top_n_countries\n#| tbl-cap: \"Top 15 countries with movies + TV-shows count\"\n\n\n# handling 'NA' values but in this dataset it is empty string\ndf <- df %>%\n  mutate(country = ifelse(country == \"\", \"Unknown\", country))\n\n# some movies/shows have more countries\ndf_split <- df %>%\n  separate_rows(country, sep = \", \")\n\ndf_country_data = get.count(df_split,country) %>%\n                  arrange(desc(n))\ntotal_countries = sum(df_country_data$n)\n\ndf_country_data <- df_country_data %>%\n  mutate(perc = round((n / total_countries) * 100, 1))\n\n# Get first 15 rows\ndf_country_data_display <- head(df_country_data, n = 15) \n\ndf_country_data_display <- df_country_data_display %>%\n  rownames_to_column(var = \"Position\")\n\n# Display top 15 countries as a table\nknitr::kable(df_country_data_display[, c(\"Position\",\"country\", \"n\", \"perc\")],\n      col.names = c(\"#\",\"Country\",\"Total (movies+shows)\", \"% of total\"))\n\n```\n\nIn the @tbl-top_n_countries we can see that the leading countries, especially USA, both have the most famous and the biggest movie and TV show production cities. For more information about differences between Hollywood and Bollywood [click here](https://testbook.com/key-differences/difference-between-bollywood-and-hollywood).\n\n```{r}\n#| label: fig-distribution-over-countries-percentage\n#| fig-cap: \"Movie & TV Shows distribution over countries in %\"\n\ndf_to_display <- df_split %>%\n  semi_join(df_country_data_display, by = \"country\") %>%\n  group_by(country) %>%\n  count(type)\n\n\ndf_to_display <- df_to_display %>%\n  group_by(country) %>%\n  mutate(total = sum(n))\n  \ndf_to_display <- df_to_display %>%\n  group_by(country) %>%\n  mutate(perc = round((n/total *100),1))\n\n\nggplot(df_to_display, aes(fill=type, x=perc, y=country)) + \n  geom_bar(position=\"fill\", stat=\"identity\") +\n  geom_text(aes(label = paste0(perc, \"%\")), position = position_fill(vjust = 0.5), color = \"white\", size = 3) +\n  labs(title = \"Percentage of Movies and TV Shows by Country\",\n       x = \"Percentage\",\n       y = \"Countries\",\n       fill = \"Type\") +\n  scale_fill_manual(values = custom_colors) +\n  theme_minimal() +\n  theme(axis.text.x = element_blank(),  # Remove x-axis labels\n        axis.ticks.x = element_blank())  # Remove x-axis ticks\n\n```\n@fig-distribution-over-countries-percentage, which depicts the percentage of movies and series produced by the top 15 nations, reveals that countries in Eastern Asia create the most TV shows, which is due to the enormous amount of anime episodes.\n\n### Movies and TV Shows average duration over years\n\n```{r}\n# make a plot with years on x axis and number of movies for decades\n\n\n# Change to numeric value\ndf$year <- as.numeric(df$release_year) # Extract the year\n\n# Duration extraction\ndf$duration_num <- as.numeric(str_extract(df$duration, \"\\\\d+\"))\ndf_groupedby_type <- df %>%\n  group_by(.$type)\n\n\n# Filter out the Movies and group by year\ndf_movies <- df %>%\n  filter(type == \"Movie\") %>%\n  group_by(year)\n\ndf_shows <- df %>%\n  filter(type == \"TV Show\") %>%\n  group_by(year)\n\n# Calculate the average duration of movies and series per year\ndf_avg_movie_duration <- df_movies %>%\n  summarise(avg_duration = mean(duration_num, na.rm = TRUE))\n\ndf_avg_series_duration <- df_shows %>%\n  summarise(avg_duration = mean(duration_num, na.rm = TRUE))\n\n```\n\n```{r}\n#| label: fig-movies\n#| fig-cap: \"Movies\"\n\n# Create the plot fot movies\nggplot(df_avg_movie_duration, aes(x=year, y=avg_duration)) +\n  geom_line() +\n  scale_x_continuous(breaks = seq(min(df_avg_movie_duration$year), max(df_avg_movie_duration$year), by = 7)) +\n  labs(x=\"Year\", y=\"Average Duration (mins)\", title=\"Average Movie Duration Over Time\") +\n  theme_minimal()\n```\n\n```{r}\n#| label: fig-shows\n#| fig-cap: \"TV Show\"\n# Create the plot for series\nggplot(df_avg_series_duration, aes(x=year, y=avg_duration)) +\n  geom_line() +\n  scale_x_continuous(breaks = seq(min(df_avg_series_duration$year), max(df_avg_series_duration$year), by = 7)) +\n  labs(x=\"Year\", y=\"Average Duration (seasons)\", title=\"Average Series Duration Over Time\") +\n  theme_minimal()\n\n```\n\n#### Discussion\n\n@fig-movies depicts how the average duration of movies (in minutes) has expanded dramatically in period between 1942 until around1965. From there, the length of each movie varies between 100 and 150 minutes. In the previous 20 years, there has been a tiny but consistent drop in duration.\n\n@fig-shows does not show anything specific, but it does demonstrate how the duration represented in seasons [[is not]{.underline}]{style=\"color: red;\"} a useful way to express the length of TV shows, if it is the only one.\n\n### Top 5\n\n| Title                       | Genres                                  | Length  |\n|--------------------|---------------------------------|-------------------|\n| Black Mirror: Bandersnatch  | Dramas, International, Sci-Fi & Fantasy | 312 min |\n| Headspace: Unwind Your Mind | Documentaries                           | 273 min |\n| The School of Mischief      | Comedies, Dramas, International         | 257 min |\n| No Longer Kids              | Comedies, Dramas, International         | 237 min |\n| Lock Your Girls             | Comedies, International, Romantic       | 233 min |\n\n: Longest movies and their genres {#tbl-top_n_movies}\n\nIn @tbl-top_n_movies we can see top 5 longest movies from the dataset listed in descending order. On the other side in @tbl-top_n_tvshows we can see top 5 longest Tv Shows in terms of seasons.\n\n```{r}\n#| label: tbl-top_n_tvshows\n#| tbl-cap: \"Longest TV Shows and their genres\"\n\ntop_n_tvshows <- df %>% \n  filter(type == \"TV Show\") %>%\n  arrange(desc(duration_num))\n\n# Get first 5 rows\ntop_n_tvshows <- head(top_n_tvshows, n = 5) \n\n# Display top N movies as a table\nknitr::kable(top_n_tvshows[, c(\"title\", \"listed_in\", \"duration\")],\n      col.names = c( \"Title\",\"Genre\", \"Duration\"))\n```\n\n## Conclusion and further research\n\nIn this project, we investigated a subset of possible analysis and visualizations for this dataset, concentrating especially on the distribution of movies and TV series among nations. However, there are countless more options for further investigation and study.\n\nOne area for future research could be the extraction and analysis of genres from the dataset. By categorizing movies and TV series based on genre, we may learn about audience preferences, trends over time, and how genre popularity varies across nations. Analyzing genre data in relation to criteria such as release year, production type (movies or series), and even audience ratings could reveal important insights into the entertainment industry's dynamics.\n\nFurthermore, we might investigate the dataset's temporal characteristics by evaluating trend lines over time. This could include studying how the number of movies and TV episodes released each year has varied over time, finding trends in genre popularity across different time periods, and looking for any links between release dates and things like viewer ratings or box office results.\n\nWe might also look deeper into the behavior of different sorts of content (movies vs. series) and how it relates to measures like viewer engagement, audience demographics, and streaming platform preferences. Understanding how audience preferences differ between movies and television shows could help streaming platforms and production businesses improve their content creation and marketing tactics.\n\nOverall, there are numerous potential directions for future analysis and exploration of this dataset, ranging from genre-based analyses to temporal trends and audience behavior. By leveraging advanced analytical techniques and visualization methods, we can uncover valuable insights into the dynamics of the entertainment industry and audience preferences.\n\n## Books\n\nOne of the popular books and well-written ones is [@Frey+2021]. The content is about *algorithmic recommender systems*, deployed by media companies to suggest content based on users’ viewing histories, have inspired hopes for personalized, curated media but also dire warnings of filter bubbles and media homogeneity. All these facts were introduced in @sec-intro.\n\n## Articles\n\n-   For more information about Netflix recommendations and recommender systems read [@inproceedings].\n\n-   Additional paper [@inbook]\n","srcMarkdownNoYaml":"\n\n## Introduction {#sec-intro}\n\n### About\n\nNetflix stands as a leading force in the realm of media and video streaming. With a staggering array of over 8,000 movies and TV shows accessible on their platform, as of mid-2021, their global subscriber count exceeds 200 million. This tabulated dataset comprehensively catalogues all offerings on Netflix, including vital details such as cast, directors, ratings, release year, duration, and more.\n\n### Why this topic?\n\n-   Firstly, it provides a rich source of information about user preferences and viewing habits, which are essential for building accurate recommendation models.\n\n-   Secondly, the Netflix movies dataset enables the development and evaluation of advanced *recommendation algorithms* and *machine learning models*. With access to detailed information about movie genres, ratings, release years, crew and cast, and user interactions, etc. scientists can experiment with various algorithms such as [collaborative filtering]{.underline}, [content-based filtering]{.underline}, and [hybrid methods]{.underline} to improve the [accuracy]{style=\"color: red;\"} and [relevance]{style=\"color: red;\"} of recommendations.\n\nMoreover, by continually updating and expanding the dataset, we contribute to the ongoing research and development efforts in the field of recommendation systems. As streaming platforms like Netflix evolve and introduce new content, it becomes imperative to adapt recommendation algorithms to accommodate these changes and ensure that users receive personalized and engaging recommendations.\n\n## Dataset Overview\n\n### About\n\nThe Netflix Titles dataset is a comprehensive compilation of movies and TV shows available on Netflix, covering various aspects such as the title type, director, cast, country of production, release year, rating, duration, genres (listed in), and a brief description. This dataset is instrumental for analyzing trends in Netflix content, understanding genre popularity, and examining the distribution of content across different regions and time periods.\n\n### Key Details\n\n**Dataset**: [Netflix Dataset](https://www.kaggle.com/datasets/rahulvyasm/netflix-movies-and-tv-shows)\n\n**Total Entries**: The dataset contains 8,809 entries, each representing a unique movie or TV show.\n\n**Columns**: There are 12 columns in the dataset:\n\n1)  **show_id**: A unique identifier for each title.\n\n2)  **type**: The category of the title, which is either 'Movie' or 'TV Show'.\n\n3)  **title**: The name of the movie or TV show.\n\n4)  **director**: The director(s) of the movie or TV show. (Contains null values for some entries, especially TV shows where this information might not be applicable.)\n\n5)  **cast**: The list of main actors/actresses in the title. (Some entries might not have this information.)\n\n6)  **country**: The country or countries where the movie or TV show was produced.\n\n7)  **date_added**: The date the title was added to Netflix.\n\n8)  **release_year**: The year the movie or TV show was originally released.\n\n9)  **rating**: The age rating of the title.\n\n10) **duration**: The duration of the title, in minutes for movies and seasons for TV shows.\n\n11) **listed_in**: The genres the title falls under.\n\n12) **description**: A brief summary of the title.\n\n## Analysis\n\n### Frequently used functions and libraries\n\n```{r}\nlibrary(readxl)\nlibrary(tibble)\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(ggplot2)\n\n# get counts for any passed column\n\nget.count <- function(data, column) {\n  column <- enquo(column)  # Capture the column name\n  cnt <- data %>%\n    count(!!column)  # Unquote the column name\n  return(cnt)\n}\n\ncustom_colors <- c(\"Movie\" = \"#db0000\", \"TV Show\" = \"#564d4d\")\n\n```\n\n### Visual representation of dataset\n\n```{r}\n\n\ndf <- read.csv(\"./files/netflix_titles.csv\")\ncolumns_to_delete <- grep(\"^X\", names(df))\n# Reason for deleting columns is that it makes additional columns after reading files. \n# Columns are called X, X.1, X.2 and so on.\ndf <- df[, -columns_to_delete]\nas_tibble(df)\n\n```\n\n### Error checking\n\n$$\n\\begin{equation}\n RMSE = \\sqrt{\\sum_{i=1}^{n} \\frac{(\\hat y_i - y_i)^2} {n}}\n\\end{equation}\n$$ Here we can see how to calculate RMSE (Root Mean Square) which is either one of two closely related and frequently used measures of the differences between true or predicted values on the one hand and observed values or an estimator on the other. Variables used in the formula are:\n\n-   $\\hat{y}$ - predicted values\n\n-   $y$ - observed values\n\n-   $n$ - number of observations\n\n### Movie & TV Show distribution\n\n```{r}\n#| label: fig-movies-and-tvshows-count\n#| fig-cap: \"Movie & TV Shows total count\"\n\nggplot(df, aes(x = type, fill = type)) +\n  geom_bar() +\n  geom_text(stat='count', aes(label=..count..), position=position_stack(vjust=0.5), color=\"white\") +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values = custom_colors)\n\n```\n\nOn this graph we can see that the movies are leading and that is somehow logical because they are easier to make.\n\nThe data from @fig-movies-and-tvshows-count could be also presented as percentages from the whole dataset.\n\n```{r}\n#| label: fig-movies-and-tvshows-percentages\n#| fig-cap: \"Movie & TV Shows distribution of total per country in %\"\n\ndf_summary <- df %>%\n  count(type) %>%\n  mutate(percentage = round(n / sum(n) * 100, 1))\n\nggplot(df_summary, aes(x = \"\", y = n, fill = type)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(theta = \"y\") +\n  geom_text(aes(label = paste0(percentage, \"%\")), \n            position = position_stack(vjust = 0.5), color = \"white\") +\n  theme_void()+\n  scale_fill_manual(values = custom_colors)\n```\n\n### Distribution over countries\n\nAfter these two (@fig-movies-and-tvshows-count and @fig-movies-and-tvshows-percentages) basic overviews lets dive into the distribution of movies and TV shows over countries.\n\nIn the next figures @tbl-top_n_countries and @fig-distribution-over-countries-percentage we will show the percentage and the total number of the movies and tv shows made per country.\n\n```{r}\n#| label: tbl-top_n_countries\n#| tbl-cap: \"Top 15 countries with movies + TV-shows count\"\n\n\n# handling 'NA' values but in this dataset it is empty string\ndf <- df %>%\n  mutate(country = ifelse(country == \"\", \"Unknown\", country))\n\n# some movies/shows have more countries\ndf_split <- df %>%\n  separate_rows(country, sep = \", \")\n\ndf_country_data = get.count(df_split,country) %>%\n                  arrange(desc(n))\ntotal_countries = sum(df_country_data$n)\n\ndf_country_data <- df_country_data %>%\n  mutate(perc = round((n / total_countries) * 100, 1))\n\n# Get first 15 rows\ndf_country_data_display <- head(df_country_data, n = 15) \n\ndf_country_data_display <- df_country_data_display %>%\n  rownames_to_column(var = \"Position\")\n\n# Display top 15 countries as a table\nknitr::kable(df_country_data_display[, c(\"Position\",\"country\", \"n\", \"perc\")],\n      col.names = c(\"#\",\"Country\",\"Total (movies+shows)\", \"% of total\"))\n\n```\n\nIn the @tbl-top_n_countries we can see that the leading countries, especially USA, both have the most famous and the biggest movie and TV show production cities. For more information about differences between Hollywood and Bollywood [click here](https://testbook.com/key-differences/difference-between-bollywood-and-hollywood).\n\n```{r}\n#| label: fig-distribution-over-countries-percentage\n#| fig-cap: \"Movie & TV Shows distribution over countries in %\"\n\ndf_to_display <- df_split %>%\n  semi_join(df_country_data_display, by = \"country\") %>%\n  group_by(country) %>%\n  count(type)\n\n\ndf_to_display <- df_to_display %>%\n  group_by(country) %>%\n  mutate(total = sum(n))\n  \ndf_to_display <- df_to_display %>%\n  group_by(country) %>%\n  mutate(perc = round((n/total *100),1))\n\n\nggplot(df_to_display, aes(fill=type, x=perc, y=country)) + \n  geom_bar(position=\"fill\", stat=\"identity\") +\n  geom_text(aes(label = paste0(perc, \"%\")), position = position_fill(vjust = 0.5), color = \"white\", size = 3) +\n  labs(title = \"Percentage of Movies and TV Shows by Country\",\n       x = \"Percentage\",\n       y = \"Countries\",\n       fill = \"Type\") +\n  scale_fill_manual(values = custom_colors) +\n  theme_minimal() +\n  theme(axis.text.x = element_blank(),  # Remove x-axis labels\n        axis.ticks.x = element_blank())  # Remove x-axis ticks\n\n```\n@fig-distribution-over-countries-percentage, which depicts the percentage of movies and series produced by the top 15 nations, reveals that countries in Eastern Asia create the most TV shows, which is due to the enormous amount of anime episodes.\n\n### Movies and TV Shows average duration over years\n\n```{r}\n# make a plot with years on x axis and number of movies for decades\n\n\n# Change to numeric value\ndf$year <- as.numeric(df$release_year) # Extract the year\n\n# Duration extraction\ndf$duration_num <- as.numeric(str_extract(df$duration, \"\\\\d+\"))\ndf_groupedby_type <- df %>%\n  group_by(.$type)\n\n\n# Filter out the Movies and group by year\ndf_movies <- df %>%\n  filter(type == \"Movie\") %>%\n  group_by(year)\n\ndf_shows <- df %>%\n  filter(type == \"TV Show\") %>%\n  group_by(year)\n\n# Calculate the average duration of movies and series per year\ndf_avg_movie_duration <- df_movies %>%\n  summarise(avg_duration = mean(duration_num, na.rm = TRUE))\n\ndf_avg_series_duration <- df_shows %>%\n  summarise(avg_duration = mean(duration_num, na.rm = TRUE))\n\n```\n\n```{r}\n#| label: fig-movies\n#| fig-cap: \"Movies\"\n\n# Create the plot fot movies\nggplot(df_avg_movie_duration, aes(x=year, y=avg_duration)) +\n  geom_line() +\n  scale_x_continuous(breaks = seq(min(df_avg_movie_duration$year), max(df_avg_movie_duration$year), by = 7)) +\n  labs(x=\"Year\", y=\"Average Duration (mins)\", title=\"Average Movie Duration Over Time\") +\n  theme_minimal()\n```\n\n```{r}\n#| label: fig-shows\n#| fig-cap: \"TV Show\"\n# Create the plot for series\nggplot(df_avg_series_duration, aes(x=year, y=avg_duration)) +\n  geom_line() +\n  scale_x_continuous(breaks = seq(min(df_avg_series_duration$year), max(df_avg_series_duration$year), by = 7)) +\n  labs(x=\"Year\", y=\"Average Duration (seasons)\", title=\"Average Series Duration Over Time\") +\n  theme_minimal()\n\n```\n\n#### Discussion\n\n@fig-movies depicts how the average duration of movies (in minutes) has expanded dramatically in period between 1942 until around1965. From there, the length of each movie varies between 100 and 150 minutes. In the previous 20 years, there has been a tiny but consistent drop in duration.\n\n@fig-shows does not show anything specific, but it does demonstrate how the duration represented in seasons [[is not]{.underline}]{style=\"color: red;\"} a useful way to express the length of TV shows, if it is the only one.\n\n### Top 5\n\n| Title                       | Genres                                  | Length  |\n|--------------------|---------------------------------|-------------------|\n| Black Mirror: Bandersnatch  | Dramas, International, Sci-Fi & Fantasy | 312 min |\n| Headspace: Unwind Your Mind | Documentaries                           | 273 min |\n| The School of Mischief      | Comedies, Dramas, International         | 257 min |\n| No Longer Kids              | Comedies, Dramas, International         | 237 min |\n| Lock Your Girls             | Comedies, International, Romantic       | 233 min |\n\n: Longest movies and their genres {#tbl-top_n_movies}\n\nIn @tbl-top_n_movies we can see top 5 longest movies from the dataset listed in descending order. On the other side in @tbl-top_n_tvshows we can see top 5 longest Tv Shows in terms of seasons.\n\n```{r}\n#| label: tbl-top_n_tvshows\n#| tbl-cap: \"Longest TV Shows and their genres\"\n\ntop_n_tvshows <- df %>% \n  filter(type == \"TV Show\") %>%\n  arrange(desc(duration_num))\n\n# Get first 5 rows\ntop_n_tvshows <- head(top_n_tvshows, n = 5) \n\n# Display top N movies as a table\nknitr::kable(top_n_tvshows[, c(\"title\", \"listed_in\", \"duration\")],\n      col.names = c( \"Title\",\"Genre\", \"Duration\"))\n```\n\n## Conclusion and further research\n\nIn this project, we investigated a subset of possible analysis and visualizations for this dataset, concentrating especially on the distribution of movies and TV series among nations. However, there are countless more options for further investigation and study.\n\nOne area for future research could be the extraction and analysis of genres from the dataset. By categorizing movies and TV series based on genre, we may learn about audience preferences, trends over time, and how genre popularity varies across nations. Analyzing genre data in relation to criteria such as release year, production type (movies or series), and even audience ratings could reveal important insights into the entertainment industry's dynamics.\n\nFurthermore, we might investigate the dataset's temporal characteristics by evaluating trend lines over time. This could include studying how the number of movies and TV episodes released each year has varied over time, finding trends in genre popularity across different time periods, and looking for any links between release dates and things like viewer ratings or box office results.\n\nWe might also look deeper into the behavior of different sorts of content (movies vs. series) and how it relates to measures like viewer engagement, audience demographics, and streaming platform preferences. Understanding how audience preferences differ between movies and television shows could help streaming platforms and production businesses improve their content creation and marketing tactics.\n\nOverall, there are numerous potential directions for future analysis and exploration of this dataset, ranging from genre-based analyses to temporal trends and audience behavior. By leveraging advanced analytical techniques and visualization methods, we can uncover valuable insights into the dynamics of the entertainment industry and audience preferences.\n\n## Books\n\nOne of the popular books and well-written ones is [@Frey+2021]. The content is about *algorithmic recommender systems*, deployed by media companies to suggest content based on users’ viewing histories, have inspired hopes for personalized, curated media but also dire warnings of filter bubbles and media homogeneity. All these facts were introduced in @sec-intro.\n\n## Articles\n\n-   For more information about Netflix recommendations and recommender systems read [@inproceedings].\n\n-   Additional paper [@inbook]\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":true,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"messages":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"embed-resources":true,"output-file":"DP-89211047-project.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.553","editor":"visual","title":"Data Programming","subtitle":"Project - Netflix Dataset","author":"Mirko Dugajlic","date":"`r format(Sys.time(), '%e %B %Y')`","bibliography":["bibliography.bib"],"toc_float":"yes"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":[]}